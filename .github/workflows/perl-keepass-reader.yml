name: perl-keepass-reader

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  pull_request:
    paths:
      - "dependencies/perl-keepass-reader/**"
  push:
    branches:
      - develop
      - dev-[2-9][0-9].[0-9][0-9].x
      - master
      - "[2-9][0-9].[0-9][0-9].x"
    paths:
      - "dependencies/perl-keepass-reader/**"

env:
  module_name: perl-keepass-reader

jobs:
  get-environment:
    uses: ./.github/workflows/get-environment.yml

  package:
    needs: [get-environment]
    if: |
      needs.get-environment.outputs.skip_workflow == 'false' &&
      needs.get-environment.outputs.stability != 'stable'

    strategy:
      fail-fast: false
      matrix:
        include:
          - image: packaging-plugins-alma8
            distrib: el8
            package_extension: rpm
          - image: packaging-plugins-alma9
            distrib: el9
            package_extension: rpm
          - image: packaging-plugins-bullseye
            distrib: bullseye
            package_extension: deb
          - image: packaging-plugins-bookworm
            distrib: bookworm
            package_extension: deb
          - image: packaging-plugins-jammy
            distrib: jammy
            package_extension: deb

    runs-on: ubuntu-22.04

    container:
      image: ${{ vars.DOCKER_INTERNAL_REGISTRY_URL }}/${{ matrix.image }}:latest
      credentials:
        username: ${{ secrets.HARBOR_CENTREON_PULL_USERNAME }}
        password: ${{ secrets.HARBOR_CENTREON_PULL_TOKEN }}

    name: package ${{ matrix.distrib }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Build library
        run: |
          if [[ "${{ matrix.package_extension }}" == "rpm" ]]; then
            dnf install -y make perl
          else
            apt-get update
            apt-get install -y make perl
          fi

          cd dependencies/perl-keepass-reader/src
          perl Makefile.PL INSTALL_BASE=/tmp/perl-keepass-reader
          make
          make pure_install
        shell: bash

      - name: Set package name and paths according to distrib
        run: |
          PERL_VERSION=$(perl -E "say $^V" | sed -E "s/v([0-9]+\.[0-9]+).+/\1/g")

          echo "Perl version is $PERL_VERSION"

          if [[ "${{ matrix.package_extension }}" == "deb" ]]; then
            NAME="libkeepass-reader-perl"
            PERL_VENDORLIB="/usr/share/perl5"
          else
            NAME="perl-KeePass-Reader"
            if [[ "${{ matrix.distrib }}" == "el8" ]]; then
              PERL_VENDORLIB="/usr/local/share/perl5"
            else
              PERL_VENDORLIB="/usr/local/share/perl5/$PERL_VERSION"
            fi
          fi

          sed -i "s/@NAME@/$NAME/g" dependencies/perl-keepass-reader/packaging/perl-keepass-reader.yaml
          sed -i "s#@PERL_VENDORLIB@#$PERL_VENDORLIB#g" dependencies/perl-keepass-reader/packaging/perl-keepass-reader.yaml

          cat dependencies/perl-keepass-reader/packaging/perl-keepass-reader.yaml
        shell: bash

      - name: Package
        uses: ./.github/actions/package-nfpm
        with:
          nfpm_file_pattern: "dependencies/perl-keepass-reader/packaging/perl-keepass-reader.yaml"
          distrib: ${{ matrix.distrib }}
          package_extension: ${{ matrix.package_extension }}
          version: "0.2"
          release: "3"
          arch: all
          commit_hash: ${{ github.sha }}
          cache_key: cache-${{ github.run_id }}-${{ matrix.package_extension }}-${{ env.module_name }}-${{ matrix.distrib }}
          rpm_gpg_key: ${{ secrets.RPM_GPG_SIGNING_KEY }}
          rpm_gpg_signing_key_id: ${{ secrets.RPM_GPG_SIGNING_KEY_ID }}
          rpm_gpg_signing_passphrase: ${{ secrets.RPM_GPG_SIGNING_PASSPHRASE }}
          stability: ${{ needs.get-environment.outputs.stability }}

  deliver-packages:
    needs: [get-environment, package]
    if: |
      (contains(fromJson('["testing", "unstable"]'), needs.get-environment.outputs.stability) || ( needs.get-environment.outputs.stability == 'stable' && github.event_name != 'workflow_dispatch')) &&
      ! cancelled() &&
      ! contains(needs.*.result, 'failure') &&
      ! contains(needs.*.result, 'cancelled')
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - distrib: el8
            package_extension: rpm
          - distrib: el9
            package_extension: rpm
          - distrib: bullseye
            package_extension: deb
          - distrib: bookworm
            package_extension: deb
          - distrib: jammy
            package_extension: deb

    name: deliver ${{ matrix.distrib }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0

      - name: Delivery
        uses: ./.github/actions/package-delivery
        with:
          module_name: ${{ env.module_name }}
          distrib: ${{ matrix.distrib }}
          cache_key: cache-${{ github.run_id }}-${{ matrix.package_extension }}-${{ env.module_name }}-${{ matrix.distrib }}
          stability: ${{ needs.get-environment.outputs.stability }}
          release_type: ${{ needs.get-environment.outputs.release_type }}
          artifactory_token: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}

  set-skip-label:
    needs: [get-environment, deliver-packages]
    if: |
      needs.get-environment.outputs.skip_workflow == 'false' &&
      ! cancelled() &&
      ! contains(needs.*.result, 'failure') &&
      ! contains(needs.*.result, 'cancelled')
    uses: ./.github/workflows/set-pull-request-skip-label.yml
